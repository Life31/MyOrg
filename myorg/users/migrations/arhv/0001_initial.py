# Generated by Django 2.2.6 on 2023-12-05 18:13

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('posts', '0077_auto_20231205_2103'),
    ]

    operations = [
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=200, verbose_name='должность')),
            ],
            options={
                'verbose_name': 'Должность',
                'verbose_name_plural': 'Должности',
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Номер отдела')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название отдела')),
            ],
            options={
                'verbose_name': 'Отдел',
                'verbose_name_plural': 'Отделы',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Vacation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_start', models.DateTimeField(blank=True, null=True, verbose_name='Дата начала')),
                ('day_end', models.DateTimeField(blank=True, null=True, verbose_name='Дата окончания')),
                ('how_long', models.TextField(blank=True, null=True, verbose_name='Всего дней')),
                ('year', models.TextField(blank=True, null=True, verbose_name='Период')),
                ('can_redact', models.BooleanField(blank=True, default=True, null=True, verbose_name='Возможность редактировать')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_vacations', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Отпуск',
                'ordering': ('user', 'day_start'),
            },
        ),
        migrations.CreateModel(
            name='User_widgets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reqs', models.BooleanField(blank=True, default=False, null=True, verbose_name='Заявки на испытания')),
                ('vacs', models.BooleanField(blank=True, default=False, null=True, verbose_name='Отпуска')),
                ('test', models.BooleanField(blank=True, default=False, null=True, verbose_name='Тесты')),
                ('corr', models.BooleanField(blank=True, default=False, null=True, verbose_name='Корреспонденция')),
                ('task', models.BooleanField(blank=True, default=False, null=True, verbose_name='Задачи')),
                ('bibl', models.BooleanField(blank=True, default=False, null=True, verbose_name='Библиотека')),
                ('stor', models.BooleanField(blank=True, default=False, null=True, verbose_name='Склад')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_widgets', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Доступ к виджетам',
                'ordering': ('user',),
            },
        ),
        migrations.CreateModel(
            name='User_info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reqs_access', models.BooleanField(blank=True, default=True, null=True, verbose_name='Доступ к заявкам')),
                ('pass_access', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к пропускам')),
                ('stor_access', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к складу')),
                ('task_access', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к задачам')),
                ('corr_access', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к корреспонденции')),
                ('conf_access', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к конфигурации')),
                ('user_access', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к сотрудникам')),
                ('vacs_access', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к отпускам')),
                ('test_access', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к тестам')),
                ('bibl_access', models.BooleanField(blank=True, default=False, null=True, verbose_name='Доступ к библиотеке')),
                ('boss', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='boss_info', to=settings.AUTH_USER_MODEL, verbose_name='Руководитель')),
                ('otd_number', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='posts.Unit', verbose_name='Номер отдела')),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='position_info', to='users.Position', verbose_name='должность')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_info', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Информация о пользователе',
                'verbose_name_plural': 'Информация о пользователях',
                'ordering': ('boss',),
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Номер заявки')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
                ('readed', models.BooleanField(blank=True, default=False, null=True, verbose_name='Прочитанно')),
                ('user_one', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_one_mess', to=settings.AUTH_USER_MODEL, verbose_name='Первый пользователь')),
                ('user_two', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_two_mess', to=settings.AUTH_USER_MODEL, verbose_name='Второй пользователь')),
                ('witch_write', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_witch_write', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь который написал')),
            ],
            options={
                'verbose_name': 'Переписка',
                'ordering': ('pub_date',),
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateTimeField(blank=True, default=datetime.datetime(2023, 12, 5, 21, 13, 3, 202513), null=True, verbose_name='Дата')),
                ('event', models.TextField(blank=True, null=True, verbose_name='Событие')),
                ('res', models.TextField(blank=True, null=True, verbose_name='Ресурс')),
                ('before', models.TextField(blank=True, null=True, verbose_name='До изменений')),
                ('after', models.TextField(blank=True, null=True, verbose_name='После изменений')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_logs', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Запись',
                'ordering': ('-day',),
            },
        ),
    ]
